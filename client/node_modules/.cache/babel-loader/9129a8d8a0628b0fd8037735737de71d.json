{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\n// Styles\nimport \"../../../src/components/VVirtualScroll/VVirtualScroll.sass\"; // Mixins\n\nimport Measurable from '../../mixins/measurable'; // Directives\n\nimport Scroll from '../../directives/scroll'; // Utilities\n\nimport { convertToUnit, getSlot } from '../../util/helpers';\nexport default Measurable.extend({\n  name: 'v-virtual-scroll',\n  directives: {\n    Scroll: Scroll\n  },\n  props: {\n    bench: {\n      type: [Number, String],\n      default: 0\n    },\n    itemHeight: {\n      type: [Number, String],\n      required: true\n    },\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      first: 0,\n      last: 0,\n      scrollTop: 0\n    };\n  },\n  computed: {\n    __bench: function __bench() {\n      return parseInt(this.bench, 10);\n    },\n    __itemHeight: function __itemHeight() {\n      return parseInt(this.itemHeight, 10);\n    },\n    firstToRender: function firstToRender() {\n      return Math.max(0, this.first - this.__bench);\n    },\n    lastToRender: function lastToRender() {\n      return Math.min(this.items.length, this.last + this.__bench);\n    }\n  },\n  watch: {\n    height: 'onScroll',\n    itemHeight: 'onScroll'\n  },\n  mounted: function mounted() {\n    this.last = this.getLast(0);\n  },\n  methods: {\n    getChildren: function getChildren() {\n      return this.items.slice(this.firstToRender, this.lastToRender).map(this.genChild);\n    },\n    genChild: function genChild(item, index) {\n      index += this.firstToRender;\n      var top = convertToUnit(index * this.__itemHeight);\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-scroll__item',\n        style: {\n          top: top\n        },\n        key: index\n      }, getSlot(this, 'default', {\n        index: index,\n        item: item\n      }));\n    },\n    getFirst: function getFirst() {\n      return Math.floor(this.scrollTop / this.__itemHeight);\n    },\n    getLast: function getLast(first) {\n      var height = parseInt(this.height || 0, 10) || this.$el.clientHeight;\n      return first + Math.ceil(height / this.__itemHeight);\n    },\n    onScroll: function onScroll() {\n      this.scrollTop = this.$el.scrollTop;\n      this.first = this.getFirst();\n      this.last = this.getLast(this.first);\n    }\n  },\n  render: function render(h) {\n    var content = h('div', {\n      staticClass: 'v-virtual-scroll__container',\n      style: {\n        height: convertToUnit(this.items.length * this.__itemHeight)\n      }\n    }, this.getChildren());\n    return h('div', {\n      staticClass: 'v-virtual-scroll',\n      style: this.measurableStyles,\n      directives: [{\n        name: 'scroll',\n        modifiers: {\n          self: true\n        },\n        value: this.onScroll\n      }],\n      on: this.$listeners\n    }, [content]);\n  }\n});","map":{"version":3,"mappings":"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","names":["Measurable","Scroll","convertToUnit","getSlot","extend","name","directives","props","bench","type","Number","String","default","itemHeight","required","items","Array","data","first","last","scrollTop","computed","__bench","parseInt","__itemHeight","firstToRender","Math","max","lastToRender","min","length","watch","height","mounted","getLast","methods","getChildren","slice","map","genChild","item","index","top","$createElement","staticClass","style","key","getFirst","floor","$el","clientHeight","ceil","onScroll","render","h","content","measurableStyles","modifiers","self","value","on","$listeners"],"sourceRoot":"","sources":["../../../src/components/VVirtualScroll/VVirtualScroll.ts"],"sourcesContent":["// Styles\nimport './VVirtualScroll.sass'\n\n// Mixins\nimport Measurable from '../../mixins/measurable'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n} from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default Measurable.extend({\n  name: 'v-virtual-scroll',\n\n  directives: { Scroll },\n\n  props: {\n    bench: {\n      type: [Number, String],\n      default: 0,\n    },\n    itemHeight: {\n      type: [Number, String],\n      required: true,\n    },\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  data: () => ({\n    first: 0,\n    last: 0,\n    scrollTop: 0,\n  }),\n\n  computed: {\n    __bench (): number {\n      return parseInt(this.bench, 10)\n    },\n    __itemHeight (): number {\n      return parseInt(this.itemHeight, 10)\n    },\n    firstToRender (): number {\n      return Math.max(0, this.first - this.__bench)\n    },\n    lastToRender (): number {\n      return Math.min(this.items.length, this.last + this.__bench)\n    },\n  },\n\n  watch: {\n    height: 'onScroll',\n    itemHeight: 'onScroll',\n  },\n\n  mounted () {\n    this.last = this.getLast(0)\n  },\n\n  methods: {\n    getChildren (): VNode[] {\n      return this.items.slice(\n        this.firstToRender,\n        this.lastToRender,\n      ).map(this.genChild)\n    },\n    genChild (item: any, index: number) {\n      index += this.firstToRender\n\n      const top = convertToUnit(index * this.__itemHeight)\n\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-scroll__item',\n        style: { top },\n        key: index,\n      }, getSlot(this, 'default', { index, item }))\n    },\n    getFirst (): number {\n      return Math.floor(this.scrollTop / this.__itemHeight)\n    },\n    getLast (first: number): number {\n      const height = parseInt(this.height || 0, 10) || this.$el.clientHeight\n\n      return first + Math.ceil(height / this.__itemHeight)\n    },\n    onScroll () {\n      this.scrollTop = this.$el.scrollTop\n      this.first = this.getFirst()\n      this.last = this.getLast(this.first)\n    },\n  },\n\n  render (h): VNode {\n    const content = h('div', {\n      staticClass: 'v-virtual-scroll__container',\n      style: {\n        height: convertToUnit((this.items.length * this.__itemHeight)),\n      },\n    }, this.getChildren())\n\n    return h('div', {\n      staticClass: 'v-virtual-scroll',\n      style: this.measurableStyles,\n      directives: [{\n        name: 'scroll',\n        modifiers: { self: true },\n        value: this.onScroll,\n      }],\n      on: this.$listeners,\n    }, [content])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}