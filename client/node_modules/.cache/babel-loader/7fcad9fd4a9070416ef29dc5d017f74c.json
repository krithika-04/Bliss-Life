{"ast":null,"code":"import _objectSpread from \"D:/vuejs-learning/MVEN-StackProject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\n// Styles\nimport \"../../../src/components/VBanner/VBanner.sass\"; // Extensions\n\nimport VSheet from '../VSheet'; // Components\n\nimport VAvatar from '../VAvatar';\nimport VIcon from '../VIcon';\nimport { VExpandTransition } from '../transitions'; // Mixins\n\nimport Mobile from '../../mixins/mobile';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit, getSlot } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(VSheet, Mobile, Toggleable).extend({\n  name: 'v-banner',\n  inheritAttrs: false,\n  props: {\n    app: Boolean,\n    icon: String,\n    iconColor: String,\n    singleLine: Boolean,\n    sticky: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VSheet.options.computed.classes.call(this)), {}, {\n        'v-banner--has-icon': this.hasIcon,\n        'v-banner--is-mobile': this.isMobile,\n        'v-banner--single-line': this.singleLine,\n        'v-banner--sticky': this.isSticky\n      });\n    },\n    hasIcon: function hasIcon() {\n      return Boolean(this.icon || this.$slots.icon);\n    },\n    isSticky: function isSticky() {\n      return this.sticky || this.app;\n    },\n    styles: function styles() {\n      var styles = _objectSpread({}, VSheet.options.computed.styles.call(this));\n\n      if (this.isSticky) {\n        var top = !this.app ? 0 : this.$vuetify.application.bar + this.$vuetify.application.top;\n        styles.top = convertToUnit(top);\n        styles.position = 'sticky';\n        styles.zIndex = 1;\n      }\n\n      return styles;\n    }\n  },\n  methods: {\n    /** @public */\n    toggle: function toggle() {\n      this.isActive = !this.isActive;\n    },\n    iconClick: function iconClick(e) {\n      this.$emit('click:icon', e);\n    },\n    genIcon: function genIcon() {\n      if (!this.hasIcon) return undefined;\n      var content;\n\n      if (this.icon) {\n        content = this.$createElement(VIcon, {\n          props: {\n            color: this.iconColor,\n            size: 28\n          }\n        }, [this.icon]);\n      } else {\n        content = this.$slots.icon;\n      }\n\n      return this.$createElement(VAvatar, {\n        staticClass: 'v-banner__icon',\n        props: {\n          color: this.color,\n          size: 40\n        },\n        on: {\n          click: this.iconClick\n        }\n      }, [content]);\n    },\n    genText: function genText() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__text'\n      }, this.$slots.default);\n    },\n    genActions: function genActions() {\n      var _this = this;\n\n      var children = getSlot(this, 'actions', {\n        dismiss: function dismiss() {\n          return _this.isActive = false;\n        }\n      });\n      if (!children) return undefined;\n      return this.$createElement('div', {\n        staticClass: 'v-banner__actions'\n      }, children);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__content'\n      }, [this.genIcon(), this.genText()]);\n    },\n    genWrapper: function genWrapper() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__wrapper'\n      }, [this.genContent(), this.genActions()]);\n    }\n  },\n  render: function render(h) {\n    var data = {\n      staticClass: 'v-banner',\n      attrs: this.attrs$,\n      class: this.classes,\n      style: this.styles,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    };\n    return h(VExpandTransition, [h('div', this.outlined ? data : this.setBackgroundColor(this.color, data), [this.genWrapper()])]);\n  }\n});","map":{"version":3,"mappings":"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","names":["VSheet","VAvatar","VIcon","VExpandTransition","Mobile","Toggleable","mixins","convertToUnit","getSlot","extend","name","inheritAttrs","props","app","Boolean","icon","String","iconColor","singleLine","sticky","value","type","default","computed","classes","options","call","hasIcon","isMobile","isSticky","$slots","styles","top","$vuetify","application","bar","position","zIndex","methods","toggle","isActive","iconClick","e","$emit","genIcon","undefined","content","$createElement","color","size","staticClass","on","click","genText","genActions","children","dismiss","genContent","genWrapper","render","h","data","attrs","attrs$","class","style","directives","outlined","setBackgroundColor"],"sourceRoot":"","sources":["../../../src/components/VBanner/VBanner.ts"],"sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VAvatar from '../VAvatar'\nimport VIcon from '../VIcon'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport {\n  convertToUnit,\n  getSlot,\n} from '../../util/helpers'\n\n// Typeslint\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Mobile,\n  Toggleable\n).extend({\n  name: 'v-banner',\n\n  inheritAttrs: false,\n\n  props: {\n    app: Boolean,\n    icon: String,\n    iconColor: String,\n    singleLine: Boolean,\n    sticky: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-banner--has-icon': this.hasIcon,\n        'v-banner--is-mobile': this.isMobile,\n        'v-banner--single-line': this.singleLine,\n        'v-banner--sticky': this.isSticky,\n      }\n    },\n    hasIcon (): boolean {\n      return Boolean(this.icon || this.$slots.icon)\n    },\n    isSticky (): boolean {\n      return this.sticky || this.app\n    },\n    styles (): object {\n      const styles: Record<string, any> = { ...VSheet.options.computed.styles.call(this) }\n\n      if (this.isSticky) {\n        const top = !this.app\n          ? 0\n          : (this.$vuetify.application.bar + this.$vuetify.application.top)\n\n        styles.top = convertToUnit(top)\n        styles.position = 'sticky'\n        styles.zIndex = 1\n      }\n\n      return styles\n    },\n  },\n\n  methods: {\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n    iconClick (e: MouseEvent) {\n      this.$emit('click:icon', e)\n    },\n    genIcon () {\n      if (!this.hasIcon) return undefined\n\n      let content\n\n      if (this.icon) {\n        content = this.$createElement(VIcon, {\n          props: {\n            color: this.iconColor,\n            size: 28,\n          },\n        }, [this.icon])\n      } else {\n        content = this.$slots.icon\n      }\n\n      return this.$createElement(VAvatar, {\n        staticClass: 'v-banner__icon',\n        props: {\n          color: this.color,\n          size: 40,\n        },\n        on: {\n          click: this.iconClick,\n        },\n      }, [content])\n    },\n    genText () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__text',\n      }, this.$slots.default)\n    },\n    genActions () {\n      const children = getSlot(this, 'actions', {\n        dismiss: () => this.isActive = false,\n      })\n\n      if (!children) return undefined\n\n      return this.$createElement('div', {\n        staticClass: 'v-banner__actions',\n      }, children)\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__content',\n      }, [\n        this.genIcon(),\n        this.genText(),\n      ])\n    },\n    genWrapper () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__wrapper',\n      }, [\n        this.genContent(),\n        this.genActions(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-banner',\n      attrs: this.attrs$,\n      class: this.classes,\n      style: this.styles,\n      directives: [{\n        name: 'show',\n        value: this.isActive,\n      }],\n    }\n\n    return h(VExpandTransition, [\n      h(\n        'div',\n        this.outlined ? data : this.setBackgroundColor(this.color, data),\n        [this.genWrapper()],\n      ),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}