{"ast":null,"code":"import _typeof from \"D:/vuejs-learning/MVEN-StackProject/client/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"D:/vuejs-learning/MVEN-StackProject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\n// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'; // Util\n\nimport props from './util/props';\nimport { DAYS_IN_MONTH_MAX, DAY_MIN, DAYS_IN_WEEK, parseTimestamp as _parseTimestamp, validateTimestamp, relativeDays, nextDay, prevDay, copyTimestamp, updateFormatted, updateWeekday, updateRelative, getStartOfMonth, getEndOfMonth, timestampToDate as _timestampToDate } from './util/timestamp'; // Calendars\n\nimport VCalendarMonthly from './VCalendarMonthly';\nimport VCalendarDaily from './VCalendarDaily';\nimport VCalendarWeekly from './VCalendarWeekly';\nimport VCalendarCategory from './VCalendarCategory';\nimport { getParsedCategories } from './util/parser';\n/* @vue/component */\n\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props.calendar), props.weeks), props.intervals), props.category),\n  data: function data() {\n    return {\n      lastStart: null,\n      lastEnd: null\n    };\n  },\n  computed: {\n    parsedValue: function parsedValue() {\n      return validateTimestamp(this.value) ? _parseTimestamp(this.value, true) : this.parsedStart || this.times.today;\n    },\n    parsedCategoryDays: function parsedCategoryDays() {\n      return parseInt(this.categoryDays) || 1;\n    },\n    renderProps: function renderProps() {\n      var around = this.parsedValue;\n      var component = null;\n      var maxDays = this.maxDays;\n      var weekdays = this.parsedWeekdays;\n      var categories = this.parsedCategories;\n      var start = around;\n      var end = around;\n\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly;\n          start = getStartOfMonth(around);\n          end = getEndOfMonth(around);\n          break;\n\n        case 'week':\n          component = VCalendarDaily;\n          start = this.getStartOfWeek(around);\n          end = this.getEndOfWeek(around);\n          maxDays = 7;\n          break;\n\n        case 'day':\n          component = VCalendarDaily;\n          maxDays = 1;\n          weekdays = [start.weekday];\n          break;\n\n        case '4day':\n          component = VCalendarDaily;\n          end = relativeDays(copyTimestamp(end), nextDay, 3);\n          updateFormatted(end);\n          maxDays = 4;\n          weekdays = [start.weekday, (start.weekday + 1) % 7, (start.weekday + 2) % 7, (start.weekday + 3) % 7];\n          break;\n\n        case 'custom-weekly':\n          component = VCalendarWeekly;\n          start = this.parsedStart || around;\n          end = this.parsedEnd;\n          break;\n\n        case 'custom-daily':\n          component = VCalendarDaily;\n          start = this.parsedStart || around;\n          end = this.parsedEnd;\n          break;\n\n        case 'category':\n          var days = this.parsedCategoryDays;\n          component = VCalendarCategory;\n          end = relativeDays(copyTimestamp(end), nextDay, days);\n          updateFormatted(end);\n          maxDays = days;\n          weekdays = [];\n\n          for (var i = 0; i < days; i++) {\n            weekdays.push((start.weekday + i) % 7);\n          }\n\n          categories = this.getCategoryList(categories);\n          break;\n\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type');\n      }\n\n      return {\n        component: component,\n        start: start,\n        end: end,\n        maxDays: maxDays,\n        weekdays: weekdays,\n        categories: categories\n      };\n    },\n    eventWeekdays: function eventWeekdays() {\n      return this.renderProps.weekdays;\n    },\n    categoryMode: function categoryMode() {\n      return this.type === 'category';\n    },\n    title: function title() {\n      var _this$renderProps = this.renderProps,\n          start = _this$renderProps.start,\n          end = _this$renderProps.end;\n      var spanYears = start.year !== end.year;\n      var spanMonths = spanYears || start.month !== end.month;\n\n      if (spanYears) {\n        return this.monthShortFormatter(start, true) + ' ' + start.year + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year;\n      }\n\n      if (spanMonths) {\n        return this.monthShortFormatter(start, true) + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year;\n      } else {\n        return this.monthLongFormatter(start, false) + ' ' + start.year;\n      }\n    },\n    monthLongFormatter: function monthLongFormatter() {\n      return this.getFormatter({\n        timeZone: 'UTC',\n        month: 'long'\n      });\n    },\n    monthShortFormatter: function monthShortFormatter() {\n      return this.getFormatter({\n        timeZone: 'UTC',\n        month: 'short'\n      });\n    },\n    parsedCategories: function parsedCategories() {\n      return getParsedCategories(this.categories, this.categoryText);\n    }\n  },\n  watch: {\n    renderProps: 'checkChange'\n  },\n  mounted: function mounted() {\n    this.updateEventVisibility();\n    this.checkChange();\n  },\n  updated: function updated() {\n    window.requestAnimationFrame(this.updateEventVisibility);\n  },\n  methods: {\n    checkChange: function checkChange() {\n      var lastStart = this.lastStart,\n          lastEnd = this.lastEnd;\n      var _this$renderProps2 = this.renderProps,\n          start = _this$renderProps2.start,\n          end = _this$renderProps2.end;\n\n      if (!lastStart || !lastEnd || start.date !== lastStart.date || end.date !== lastEnd.date) {\n        this.lastStart = start;\n        this.lastEnd = end;\n        this.$emit('change', {\n          start: start,\n          end: end\n        });\n      }\n    },\n    move: function move() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var moved = copyTimestamp(this.parsedValue);\n      var forward = amount > 0;\n      var mover = forward ? nextDay : prevDay;\n      var limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN;\n      var times = forward ? amount : -amount;\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit;\n            mover(moved);\n            break;\n\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK);\n            break;\n\n          case 'day':\n            relativeDays(moved, mover, 1);\n            break;\n\n          case '4day':\n            relativeDays(moved, mover, 4);\n            break;\n\n          case 'category':\n            relativeDays(moved, mover, this.parsedCategoryDays);\n            break;\n        }\n      }\n\n      updateWeekday(moved);\n      updateFormatted(moved);\n      updateRelative(moved, this.times.now);\n\n      if (this.value instanceof Date) {\n        this.$emit('input', _timestampToDate(moved));\n      } else if (typeof this.value === 'number') {\n        this.$emit('input', _timestampToDate(moved).getTime());\n      } else {\n        this.$emit('input', moved.date);\n      }\n\n      this.$emit('moved', moved);\n    },\n    next: function next() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.move(amount);\n    },\n    prev: function prev() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.move(-amount);\n    },\n    timeToY: function timeToY(time) {\n      var clamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var c = this.$children[0];\n\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp);\n      } else {\n        return false;\n      }\n    },\n    timeDelta: function timeDelta(time) {\n      var c = this.$children[0];\n\n      if (c && c.timeDelta) {\n        return c.timeDelta(time);\n      } else {\n        return false;\n      }\n    },\n    minutesToPixels: function minutesToPixels(minutes) {\n      var c = this.$children[0];\n\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes);\n      } else {\n        return -1;\n      }\n    },\n    scrollToTime: function scrollToTime(time) {\n      var c = this.$children[0];\n\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time);\n      } else {\n        return false;\n      }\n    },\n    parseTimestamp: function parseTimestamp(input, required) {\n      return _parseTimestamp(input, required, this.times.now);\n    },\n    timestampToDate: function timestampToDate(timestamp) {\n      return _timestampToDate(timestamp);\n    },\n    getCategoryList: function getCategoryList(categories) {\n      var _this = this;\n\n      if (!this.noEvents) {\n        var categoryMap = categories.reduce(function (map, category, index) {\n          if (_typeof(category) === 'object' && category.categoryName) map[category.categoryName] = {\n            index: index,\n            count: 0\n          };else if (typeof category === 'string') map[category] = {\n            index: index,\n            count: 0\n          };\n          return map;\n        }, {});\n\n        if (!this.categoryHideDynamic || !this.categoryShowAll) {\n          var categoryLength = categories.length;\n          this.parsedEvents.forEach(function (ev) {\n            var category = ev.category;\n\n            if (typeof category !== 'string') {\n              category = _this.categoryForInvalid;\n            }\n\n            if (!category) {\n              return;\n            }\n\n            if (category in categoryMap) {\n              categoryMap[category].count++;\n            } else if (!_this.categoryHideDynamic) {\n              categoryMap[category] = {\n                index: categoryLength++,\n                count: 1\n              };\n            }\n          });\n        }\n\n        if (!this.categoryShowAll) {\n          for (var category in categoryMap) {\n            if (categoryMap[category].count === 0) {\n              delete categoryMap[category];\n            }\n          }\n        }\n\n        categories = categories.filter(function (category) {\n          if (_typeof(category) === 'object' && category.categoryName) {\n            return categoryMap.hasOwnProperty(category.categoryName);\n          } else if (typeof category === 'string') {\n            return categoryMap.hasOwnProperty(category);\n          }\n\n          return false;\n        });\n      }\n\n      return categories;\n    }\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    var _this$renderProps3 = this.renderProps,\n        start = _this$renderProps3.start,\n        end = _this$renderProps3.end,\n        maxDays = _this$renderProps3.maxDays,\n        component = _this$renderProps3.component,\n        weekdays = _this$renderProps3.weekdays,\n        categories = _this$renderProps3.categories;\n    return h(component, {\n      staticClass: 'v-calendar',\n      class: {\n        'v-calendar-events': !this.noEvents\n      },\n      props: _objectSpread(_objectSpread({}, this.$props), {}, {\n        start: start.date,\n        end: end.date,\n        maxDays: maxDays,\n        weekdays: weekdays,\n        categories: categories\n      }),\n      directives: [{\n        modifiers: {\n          quiet: true\n        },\n        name: 'resize',\n        value: this.updateEventVisibility\n      }],\n      on: _objectSpread(_objectSpread({}, this.$listeners), {}, {\n        'click:date': function clickDate(day, e) {\n          if (_this2.$listeners.input) {\n            _this2.$emit('input', day.date);\n          }\n\n          if (_this2.$listeners['click:date']) {\n            _this2.$emit('click:date', day, e);\n          }\n        }\n      }),\n      scopedSlots: this.getScopedSlots()\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["CalendarWithEvents","props","DAYS_IN_MONTH_MAX","DAY_MIN","DAYS_IN_WEEK","parseTimestamp","validateTimestamp","relativeDays","nextDay","prevDay","copyTimestamp","updateFormatted","updateWeekday","updateRelative","getStartOfMonth","getEndOfMonth","timestampToDate","VCalendarMonthly","VCalendarDaily","VCalendarWeekly","VCalendarCategory","getParsedCategories","extend","name","calendar","weeks","intervals","category","data","lastStart","lastEnd","computed","parsedValue","value","parsedStart","times","today","parsedCategoryDays","parseInt","categoryDays","renderProps","around","component","maxDays","weekdays","parsedWeekdays","categories","parsedCategories","start","end","type","getStartOfWeek","getEndOfWeek","weekday","parsedEnd","days","i","push","getCategoryList","Error","eventWeekdays","categoryMode","title","spanYears","year","spanMonths","month","monthShortFormatter","monthLongFormatter","getFormatter","timeZone","categoryText","watch","mounted","updateEventVisibility","checkChange","updated","window","requestAnimationFrame","methods","date","$emit","move","amount","moved","forward","mover","limit","day","now","Date","getTime","next","prev","timeToY","time","clamp","c","$children","timeDelta","minutesToPixels","minutes","scrollToTime","input","required","timestamp","noEvents","categoryMap","reduce","map","index","categoryName","count","categoryHideDynamic","categoryShowAll","categoryLength","length","parsedEvents","forEach","ev","categoryForInvalid","filter","hasOwnProperty","render","h","staticClass","class","$props","directives","modifiers","quiet","on","$listeners","e","scopedSlots","getScopedSlots"],"sourceRoot":"","sources":["../../../src/components/VCalendar/VCalendar.ts"],"sourcesContent":["// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n\n// Types\nimport { VNode, Component } from 'vue'\n\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'\n\n// Util\nimport props from './util/props'\nimport {\n  DAYS_IN_MONTH_MAX,\n  DAY_MIN,\n  DAYS_IN_WEEK,\n  parseTimestamp,\n  validateTimestamp,\n  relativeDays,\n  nextDay,\n  prevDay,\n  copyTimestamp,\n  updateFormatted,\n  updateWeekday,\n  updateRelative,\n  getStartOfMonth,\n  getEndOfMonth,\n  VTime,\n  VTimestampInput,\n  timestampToDate,\n} from './util/timestamp'\n\n// Calendars\nimport VCalendarMonthly from './VCalendarMonthly'\nimport VCalendarDaily from './VCalendarDaily'\nimport VCalendarWeekly from './VCalendarWeekly'\nimport VCalendarCategory from './VCalendarCategory'\nimport { CalendarTimestamp, CalendarFormatter, CalendarCategory } from 'vuetify/types'\nimport { getParsedCategories } from './util/parser'\n\n// Types\ninterface VCalendarRenderProps {\n  start: CalendarTimestamp\n  end: CalendarTimestamp\n  component: string | Component\n  maxDays: number\n  weekdays: number[]\n  categories: CalendarCategory[]\n}\n\n/* @vue/component */\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n\n  props: {\n    ...props.calendar,\n    ...props.weeks,\n    ...props.intervals,\n    ...props.category,\n  },\n\n  data: () => ({\n    lastStart: null as CalendarTimestamp | null,\n    lastEnd: null as CalendarTimestamp | null,\n  }),\n\n  computed: {\n    parsedValue (): CalendarTimestamp {\n      return (validateTimestamp(this.value)\n        ? parseTimestamp(this.value, true)\n        : (this.parsedStart || this.times.today))\n    },\n    parsedCategoryDays (): number {\n      return parseInt(this.categoryDays) || 1\n    },\n    renderProps (): VCalendarRenderProps {\n      const around = this.parsedValue\n      let component: any = null\n      let maxDays = this.maxDays\n      let weekdays = this.parsedWeekdays\n      let categories = this.parsedCategories\n      let start = around\n      let end = around\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly\n          start = getStartOfMonth(around)\n          end = getEndOfMonth(around)\n          break\n        case 'week':\n          component = VCalendarDaily\n          start = this.getStartOfWeek(around)\n          end = this.getEndOfWeek(around)\n          maxDays = 7\n          break\n        case 'day':\n          component = VCalendarDaily\n          maxDays = 1\n          weekdays = [start.weekday]\n          break\n        case '4day':\n          component = VCalendarDaily\n          end = relativeDays(copyTimestamp(end), nextDay, 3)\n          updateFormatted(end)\n          maxDays = 4\n          weekdays = [\n            start.weekday,\n            (start.weekday + 1) % 7,\n            (start.weekday + 2) % 7,\n            (start.weekday + 3) % 7,\n          ]\n          break\n        case 'custom-weekly':\n          component = VCalendarWeekly\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'custom-daily':\n          component = VCalendarDaily\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'category':\n          const days = this.parsedCategoryDays\n\n          component = VCalendarCategory\n          end = relativeDays(copyTimestamp(end), nextDay, days)\n          updateFormatted(end)\n          maxDays = days\n          weekdays = []\n\n          for (let i = 0; i < days; i++) {\n            weekdays.push((start.weekday + i) % 7)\n          }\n\n          categories = this.getCategoryList(categories)\n          break\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type')\n      }\n\n      return { component, start, end, maxDays, weekdays, categories }\n    },\n    eventWeekdays (): number[] {\n      return this.renderProps.weekdays\n    },\n    categoryMode (): boolean {\n      return this.type === 'category'\n    },\n    title (): string {\n      const { start, end } = this.renderProps\n      const spanYears = start.year !== end.year\n      const spanMonths = spanYears || start.month !== end.month\n\n      if (spanYears) {\n        return this.monthShortFormatter(start, true) + ' ' + start.year + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year\n      }\n\n      if (spanMonths) {\n        return this.monthShortFormatter(start, true) + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year\n      } else {\n        return this.monthLongFormatter(start, false) + ' ' + start.year\n      }\n    },\n    monthLongFormatter (): CalendarFormatter {\n      return this.getFormatter({\n        timeZone: 'UTC', month: 'long',\n      })\n    },\n    monthShortFormatter (): CalendarFormatter {\n      return this.getFormatter({\n        timeZone: 'UTC', month: 'short',\n      })\n    },\n    parsedCategories (): CalendarCategory[] {\n      return getParsedCategories(this.categories, this.categoryText)\n    },\n  },\n\n  watch: {\n    renderProps: 'checkChange',\n  },\n\n  mounted () {\n    this.updateEventVisibility()\n    this.checkChange()\n  },\n\n  updated () {\n    window.requestAnimationFrame(this.updateEventVisibility)\n  },\n\n  methods: {\n    checkChange (): void {\n      const { lastStart, lastEnd } = this\n      const { start, end } = this.renderProps\n      if (!lastStart || !lastEnd ||\n        start.date !== lastStart.date ||\n        end.date !== lastEnd.date) {\n        this.lastStart = start\n        this.lastEnd = end\n        this.$emit('change', { start, end })\n      }\n    },\n    move (amount = 1): void {\n      const moved = copyTimestamp(this.parsedValue)\n      const forward = amount > 0\n      const mover = forward ? nextDay : prevDay\n      const limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN\n      let times = forward ? amount : -amount\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit\n            mover(moved)\n            break\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK)\n            break\n          case 'day':\n            relativeDays(moved, mover, 1)\n            break\n          case '4day':\n            relativeDays(moved, mover, 4)\n            break\n          case 'category':\n            relativeDays(moved, mover, this.parsedCategoryDays)\n            break\n        }\n      }\n\n      updateWeekday(moved)\n      updateFormatted(moved)\n      updateRelative(moved, this.times.now)\n\n      if (this.value instanceof Date) {\n        this.$emit('input', timestampToDate(moved))\n      } else if (typeof this.value === 'number') {\n        this.$emit('input', timestampToDate(moved).getTime())\n      } else {\n        this.$emit('input', moved.date)\n      }\n\n      this.$emit('moved', moved)\n    },\n    next (amount = 1): void {\n      this.move(amount)\n    },\n    prev (amount = 1): void {\n      this.move(-amount)\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const c = this.$children[0] as any\n\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp)\n      } else {\n        return false\n      }\n    },\n    timeDelta (time: VTime): number | false {\n      const c = this.$children[0] as any\n\n      if (c && c.timeDelta) {\n        return c.timeDelta(time)\n      } else {\n        return false\n      }\n    },\n    minutesToPixels (minutes: number): number {\n      const c = this.$children[0] as any\n\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes)\n      } else {\n        return -1\n      }\n    },\n    scrollToTime (time: VTime): boolean {\n      const c = this.$children[0] as any\n\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time)\n      } else {\n        return false\n      }\n    },\n    parseTimestamp (input: VTimestampInput, required?: false): CalendarTimestamp | null {\n      return parseTimestamp(input, required, this.times.now)\n    },\n    timestampToDate (timestamp: CalendarTimestamp): Date {\n      return timestampToDate(timestamp)\n    },\n    getCategoryList (categories: CalendarCategory[]): CalendarCategory[] {\n      if (!this.noEvents) {\n        const categoryMap: any = categories.reduce((map: any, category, index) => {\n          if (typeof category === 'object' && category.categoryName) map[category.categoryName] = { index, count: 0 }\n          else if (typeof category === 'string') map[category] = { index, count: 0 }\n          return map\n        }, {})\n\n        if (!this.categoryHideDynamic || !this.categoryShowAll) {\n          let categoryLength = categories.length\n\n          this.parsedEvents.forEach(ev => {\n            let category = ev.category\n\n            if (typeof category !== 'string') {\n              category = this.categoryForInvalid\n            }\n\n            if (!category) {\n              return\n            }\n\n            if (category in categoryMap) {\n              categoryMap[category].count++\n            } else if (!this.categoryHideDynamic) {\n              categoryMap[category] = {\n                index: categoryLength++,\n                count: 1,\n              }\n            }\n          })\n        }\n\n        if (!this.categoryShowAll) {\n          for (const category in categoryMap) {\n            if (categoryMap[category].count === 0) {\n              delete categoryMap[category]\n            }\n          }\n        }\n\n        categories = categories.filter((category: CalendarCategory) => {\n          if (typeof category === 'object' && category.categoryName) {\n            return categoryMap.hasOwnProperty(category.categoryName)\n          } else if (typeof category === 'string') {\n            return categoryMap.hasOwnProperty(category)\n          }\n          return false\n        })\n      }\n      return categories\n    },\n  },\n\n  render (h): VNode {\n    const { start, end, maxDays, component, weekdays, categories } = this.renderProps\n\n    return h(component, {\n      staticClass: 'v-calendar',\n      class: {\n        'v-calendar-events': !this.noEvents,\n      },\n      props: {\n        ...this.$props,\n        start: start.date,\n        end: end.date,\n        maxDays,\n        weekdays,\n        categories,\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.updateEventVisibility,\n      }],\n      on: {\n        ...this.$listeners,\n\n        'click:date': (day: CalendarTimestamp, e?: MouseEvent) => {\n          if (this.$listeners.input) {\n            this.$emit('input', day.date)\n          }\n          if (this.$listeners['click:date']) {\n            this.$emit('click:date', day, e)\n          }\n        },\n      },\n      scopedSlots: this.getScopedSlots(),\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}