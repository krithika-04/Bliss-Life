{"ast":null,"code":"import _objectSpread from \"D:/Github/Bliss-Life/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"D:/Github/Bliss-Life/client/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.map.js\";\nexport function parsedCategoryText(category, categoryText) {\n  return typeof categoryText === 'string' && _typeof(category) === 'object' && category ? category[categoryText] : typeof categoryText === 'function' ? categoryText(category) : category;\n}\nexport function getParsedCategories(categories, categoryText) {\n  if (typeof categories === 'string') return categories.split(/\\s*,\\s/);\n\n  if (Array.isArray(categories)) {\n    return categories.map(function (category) {\n      if (typeof category === 'string') return category;\n      var categoryName = typeof category.categoryName === 'string' ? category.categoryName : parsedCategoryText(category, categoryText);\n      return _objectSpread(_objectSpread({}, category), {}, {\n        categoryName: categoryName\n      });\n    });\n  }\n\n  return [];\n}","map":{"version":3,"mappings":";;;;;AAEA,OAAM,SAAUA,kBAAV,CACJC,QADI,EAEJC,YAFI,EAE+C;AAEnD,SAAO,OAAOA,YAAP,KAAwB,QAAxB,IAAoC,QAAOD,QAAP,MAAoB,QAAxD,IAAoEA,QAApE,GACHA,QAAQ,CAACC,YAAD,CADL,GAEH,OAAOA,YAAP,KAAwB,UAAxB,GACEA,YAAY,CAACD,QAAD,CADd,GAEEA,QAJN;AAKD;AAED,OAAM,SAAUE,mBAAV,CACJC,UADI,EAEJF,YAFI,EAE+C;AAEnD,MAAI,OAAOE,UAAP,KAAsB,QAA1B,EAAoC,OAAOA,UAAU,CAACC,KAAX,CAAiB,QAAjB,CAAP;;AACpC,MAAIC,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAJ,EAA+B;AAC7B,WAAOA,UAAU,CAACI,GAAX,CAAgB,kBAAD,EAA+B;AACnD,UAAI,OAAOP,QAAP,KAAoB,QAAxB,EAAkC,OAAOA,QAAP;AAElC,UAAMQ,YAAY,GAAG,OAAOR,QAAQ,CAACQ,YAAhB,KAAiC,QAAjC,GACjBR,QAAQ,CAACQ,YADQ,GAEjBT,kBAAkB,CAACC,QAAD,EAAWC,YAAX,CAFtB;AAGA,6CAAYD,QAAZ;AAAsBQ;AAAtB;AANK,MAAP;AAQD;;AACD,SAAO,EAAP;AACD","names":["parsedCategoryText","category","categoryText","getParsedCategories","categories","split","Array","isArray","map","categoryName"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/util/parser.ts"],"sourcesContent":["import { CalendarCategory, CalendarCategoryTextFunction } from 'types'\n\nexport function parsedCategoryText (\n  category: CalendarCategory,\n  categoryText: string | CalendarCategoryTextFunction\n): string {\n  return typeof categoryText === 'string' && typeof category === 'object' && category\n    ? category[categoryText]\n    : typeof categoryText === 'function'\n      ? categoryText(category)\n      : category\n}\n\nexport function getParsedCategories (\n  categories: CalendarCategory | CalendarCategory[],\n  categoryText: string | CalendarCategoryTextFunction\n): CalendarCategory[] {\n  if (typeof categories === 'string') return categories.split(/\\s*,\\s/)\n  if (Array.isArray(categories)) {\n    return categories.map((category: CalendarCategory) => {\n      if (typeof category === 'string') return category\n\n      const categoryName = typeof category.categoryName === 'string'\n        ? category.categoryName\n        : parsedCategoryText(category, categoryText)\n      return { ...category, categoryName }\n    })\n  }\n  return []\n}\n"]},"metadata":{},"sourceType":"module"}