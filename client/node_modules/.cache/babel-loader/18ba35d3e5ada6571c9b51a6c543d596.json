{"ast":null,"code":"import _objectSpread from \"D:/vuejs-learning/MVEN-StackProject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\n// Styles\nimport \"../../../src/components/VExpansionPanel/VExpansionPanel.sass\"; // Components\n\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'; // Utilities\n\nimport { breaking } from '../../util/console';\n/* @vue/component */\n\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n  provide: function provide() {\n    return {\n      expansionPanels: this\n    };\n  },\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, BaseItemGroup.options.computed.classes.call(this)), {}, {\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile\n      });\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this);\n    }\n    /* istanbul ignore next */\n\n\n    if (Array.isArray(this.value) && this.value.length > 0 && typeof this.value[0] === 'boolean') {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this);\n    }\n  },\n  methods: {\n    updateItem: function updateItem(item, index) {\n      var value = this.getValue(item, index);\n      var nextValue = this.getValue(item, index + 1);\n      item.isActive = this.toggleMethod(value);\n      item.nextIsActive = this.toggleMethod(nextValue);\n    }\n  }\n});","map":{"version":3,"mappings":";;;AAAA;AACA,OAAO,8DAAP,C,CAEA;;AACA,SAASA,aAAT,QAAiD,0BAAjD,C,CAGA;;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAKA;;AACA,eAAeD,aAAa,CAACE,MAAd,CAAqB;AAClCC,MAAI,EAAE,oBAD4B;AAGlCC,SAHkC,qBAG3B;AACL,WAAO;AACLC,qBAAe,EAAE;AADZ,KAAP;AAJgC;AASlCC,OAAK,EAAE;AACLC,aAAS,EAAEC,OADN;AAELC,YAAQ,EAAED,OAFL;AAGLE,QAAI,EAAEF,OAHD;AAILG,SAAK,EAAEH,OAJF;AAKLI,aAAS,EAAEJ,OALN;AAMLK,SAAK,EAAEL,OANF;AAOLM,UAAM,EAAEN,OAPH;AAQLO,YAAQ,EAAEP,OARL;AASLQ,QAAI,EAAER;AATD,GAT2B;AAqBlCS,UAAQ,EAAE;AACRC,WADQ,qBACD;AACL,6CACKlB,aAAa,CAACmB,OAAd,CAAsBF,QAAtB,CAA+BC,OAA/B,CAAuCE,IAAvC,CAA4C,IAA5C,CADL;AAEE,8BAAsB,IAFxB;AAGE,yCAAiC,KAAKb,SAHxC;AAIE,oCAA4B,KAAKG,IAJnC;AAKE,qCAA6B,KAAKC,KALpC;AAME,yCAAiC,KAAKC,SANxC;AAOE,qCAA6B,KAAKC,KAPpC;AAQE,sCAA8B,KAAKC,MARrC;AASE,oCAA4B,KAAKE;AATnC;AAWD;AAbO,GArBwB;AAqClCK,SArCkC,qBAqC3B;AACL;AACA,QAAI,KAAKC,MAAL,CAAYC,cAAZ,CAA2B,QAA3B,CAAJ,EAA0C;AACxCtB,cAAQ,CAAC,QAAD,EAAW,UAAX,EAAuB,IAAvB,CAAR;AACD;AAED;;;AACA,QACEuB,KAAK,CAACC,OAAN,CAAc,KAAKC,KAAnB,KACA,KAAKA,KAAL,CAAWC,MAAX,GAAoB,CADpB,IAEA,OAAO,KAAKD,KAAL,CAAW,CAAX,CAAP,KAAyB,SAH3B,EAIE;AACAzB,cAAQ,CAAC,8BAAD,EAAiC,iBAAjC,EAAoD,IAApD,CAAR;AACD;AAlD+B;AAqDlC2B,SAAO,EAAE;AACPC,cADO,sBACKC,IADL,EACwDC,KADxD,EACqE;AAC1E,UAAML,KAAK,GAAG,KAAKM,QAAL,CAAcF,IAAd,EAAoBC,KAApB,CAAd;AACA,UAAME,SAAS,GAAG,KAAKD,QAAL,CAAcF,IAAd,EAAoBC,KAAK,GAAG,CAA5B,CAAlB;AAEAD,UAAI,CAACI,QAAL,GAAgB,KAAKC,YAAL,CAAkBT,KAAlB,CAAhB;AACAI,UAAI,CAACM,YAAL,GAAoB,KAAKD,YAAL,CAAkBF,SAAlB,CAApB;AACD;AAPM;AArDyB,CAArB,CAAf","names":["BaseItemGroup","breaking","extend","name","provide","expansionPanels","props","accordion","Boolean","disabled","flat","hover","focusable","inset","popout","readonly","tile","computed","classes","options","call","created","$attrs","hasOwnProperty","Array","isArray","value","length","methods","updateItem","item","index","getValue","nextValue","isActive","toggleMethod","nextIsActive"],"sourceRoot":"","sources":["../../../src/components/VExpansionPanel/VExpansionPanels.ts"],"sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}