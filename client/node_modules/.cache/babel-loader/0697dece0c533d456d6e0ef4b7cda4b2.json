{"ast":null,"code":"import _asyncToGenerator from \"D:/vuejs-learning/MVEN-StackProject/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from 'axios';\nimport router from './router';\nvar url = \"api/post\";\nvar state = {\n  token: localStorage.getItem('token') || '',\n  user: {},\n  status: '',\n  error: null\n};\nvar getters = {\n  isLoggedIn: function isLoggedIn(state) {\n    if (state.token != '') {\n      return true;\n    } else {\n      return false;\n    }\n  } // isLoggedIn: state => !!state.token,\n  // authState: state => state.status,\n  // user: state => state.user,\n  // error: state => state.error\n\n};\nvar actions = {\n  // Login Action\n  login: function login(_ref, user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, res, token, _user;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit('auth_request');\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"\".concat(url, \"/login\"), user);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.data.success) {\n                token = res.data.token;\n                _user = res.data.user; // Store the token into the localstorage\n\n                localStorage.setItem('token', token); // Set the axios defaults\n\n                axios.defaults.headers.common['Authorization'] = token;\n                commit('auth_success', token, _user);\n              }\n\n              return _context.abrupt(\"return\", res);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              commit('auth_error', _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }))();\n  },\n  // Register User\n  register: function register(_ref2, userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.prev = 1;\n              commit('register_request');\n              _context2.next = 5;\n              return axios.post(\"\".concat(url, \"/register\"), userData);\n\n            case 5:\n              res = _context2.sent;\n\n              if (res.data.success !== undefined) {\n                commit('register_success');\n              }\n\n              return _context2.abrupt(\"return\", res);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              commit('register_error', _context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }))();\n  },\n  // Get the user Profile\n  getProfile: function getProfile(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              commit('profile_request');\n              _context3.next = 4;\n              return axios.get(\"\".concat(url, \"/profile\"));\n\n            case 4:\n              res = _context3.sent;\n              commit('user_profile', res.data.user);\n              return _context3.abrupt(\"return\", res);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  // Logout the user\n  logout: function logout(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return localStorage.removeItem('token');\n\n            case 3:\n              commit('logout');\n              delete axios.defaults.headers.common['Authorization'];\n              router.push('/login');\n              return _context4.abrupt(\"return\");\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n};\nvar mutations = {\n  auth_request: function auth_request(state) {\n    state.error = null;\n    state.status = 'loading';\n  },\n  auth_success: function auth_success(state, token, user) {\n    state.token = token;\n    state.user = user;\n    state.status = 'success';\n    state.error = null;\n  },\n  auth_error: function auth_error(state, err) {\n    state.error = err.response.data.msg;\n  },\n  register_request: function register_request(state) {\n    state.error = null;\n    state.status = 'loading';\n  },\n  register_success: function register_success(state) {\n    state.error = null;\n    state.status = 'success';\n  },\n  register_error: function register_error(state, err) {\n    state.error = err.response.data.msg;\n  },\n  logout: function logout(state) {\n    state.error = null;\n    state.status = '';\n    state.token = '';\n    state.user = '';\n  },\n  profile_request: function profile_request(state) {\n    state.status = 'loading';\n  },\n  user_profile: function user_profile(state, user) {\n    state.user = user;\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};","map":{"version":3,"sources":["D:/vuejs-learning/MVEN-StackProject/client/src/Auth.js"],"names":["axios","router","url","state","token","localStorage","getItem","user","status","error","getters","isLoggedIn","actions","login","commit","post","res","data","success","setItem","defaults","headers","common","register","userData","undefined","getProfile","get","logout","removeItem","push","mutations","auth_request","auth_success","auth_error","err","response","msg","register_request","register_success","register_error","profile_request","user_profile"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,GAAG,GAAG,UAAZ;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAD9B;AAEVC,EAAAA,IAAI,EAAE,EAFI;AAGVC,EAAAA,MAAM,EAAE,EAHE;AAIVC,EAAAA,KAAK,EAAE;AAJG,CAAd;AAOA,IAAMC,OAAO,GAAG;AACZC,EAAAA,UAAU,EAAE,oBAAUR,KAAV,EAAiB;AACzB,QAAIA,KAAK,CAACC,KAAN,IAAe,EAAnB,EAAuB;AACnB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAPW,CAQZ;AACA;AACA;AACA;;AAXY,CAAhB;AAcA,IAAMQ,OAAO,GAAG;AACZ;AACMC,EAAAA,KAFM,uBAITN,IAJS,EAIH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AADLO,cAAAA,MACK,QADLA,MACK;AACLA,cAAAA,MAAM,CAAC,cAAD,CAAN;AADK;AAAA;AAAA,qBAGed,KAAK,CAACe,IAAN,WAAcb,GAAd,aAA2BK,IAA3B,CAHf;;AAAA;AAGGS,cAAAA,GAHH;;AAID,kBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AACZd,gBAAAA,KADY,GACJY,GAAG,CAACC,IAAJ,CAASb,KADL;AAEZG,gBAAAA,KAFY,GAELS,GAAG,CAACC,IAAJ,CAASV,IAFJ,EAGlB;;AACAF,gBAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8Bf,KAA9B,EAJkB,CAKlB;;AACAJ,gBAAAA,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDlB,KAAjD;AACAU,gBAAAA,MAAM,CAAC,cAAD,EAAiBV,KAAjB,EAAwBG,KAAxB,CAAN;AACH;;AAZA,+CAaMS,GAbN;;AAAA;AAAA;AAAA;AAeDF,cAAAA,MAAM,CAAC,YAAD,cAAN;;AAfC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBR,GArBW;AAsBZ;AACMS,EAAAA,QAvBM,2BAyBTC,QAzBS,EAyBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADTV,cAAAA,MACS,SADTA,MACS;AAAA;AAELA,cAAAA,MAAM,CAAC,kBAAD,CAAN;AAFK;AAAA,qBAGWd,KAAK,CAACe,IAAN,WAAcb,GAAd,gBAA8BsB,QAA9B,CAHX;;AAAA;AAGDR,cAAAA,GAHC;;AAIL,kBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqBO,SAAzB,EAAoC;AAChCX,gBAAAA,MAAM,CAAC,kBAAD,CAAN;AACH;;AANI,gDAOEE,GAPF;;AAAA;AAAA;AAAA;AASLF,cAAAA,MAAM,CAAC,gBAAD,eAAN;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWZ,GApCW;AAqCZ;AACMY,EAAAA,UAtCM,6BAwCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCZ,cAAAA,MACD,SADCA,MACD;AACCA,cAAAA,MAAM,CAAC,iBAAD,CAAN;AADD;AAAA,qBAEiBd,KAAK,CAAC2B,GAAN,WAAazB,GAAb,cAFjB;;AAAA;AAEKc,cAAAA,GAFL;AAGCF,cAAAA,MAAM,CAAC,cAAD,EAAiBE,GAAG,CAACC,IAAJ,CAASV,IAA1B,CAAN;AAHD,gDAIQS,GAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKF,GA7CW;AA8CZ;AACMY,EAAAA,MA/CM,yBAiDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCd,cAAAA,MACD,SADCA,MACD;AAAA;AAAA,qBACOT,YAAY,CAACwB,UAAb,CAAwB,OAAxB,CADP;;AAAA;AAECf,cAAAA,MAAM,CAAC,QAAD,CAAN;AACA,qBAAOd,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACArB,cAAAA,MAAM,CAAC6B,IAAP,CAAY,QAAZ;AAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMF;AAvDW,CAAhB;AA0DA,IAAMC,SAAS,GAAG;AACdC,EAAAA,YADc,wBACD7B,KADC,EACM;AAChBA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GAJa;AAKdyB,EAAAA,YALc,wBAKD9B,KALC,EAKMC,KALN,EAKaG,IALb,EAKmB;AAC7BJ,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACAD,IAAAA,KAAK,CAACI,IAAN,GAAaA,IAAb;AACAJ,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACAL,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACH,GAVa;AAWdyB,EAAAA,UAXc,sBAWH/B,KAXG,EAWIgC,GAXJ,EAWS;AACnBhC,IAAAA,KAAK,CAACM,KAAN,GAAc0B,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBoB,GAAhC;AACH,GAba;AAcdC,EAAAA,gBAdc,4BAcGnC,KAdH,EAcU;AACpBA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GAjBa;AAkBd+B,EAAAA,gBAlBc,4BAkBGpC,KAlBH,EAkBU;AACpBA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GArBa;AAsBdgC,EAAAA,cAtBc,0BAsBCrC,KAtBD,EAsBQgC,GAtBR,EAsBa;AACvBhC,IAAAA,KAAK,CAACM,KAAN,GAAc0B,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBoB,GAAhC;AACH,GAxBa;AAyBdT,EAAAA,MAzBc,kBAyBPzB,KAzBO,EAyBA;AACVA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,EAAf;AACAL,IAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACAD,IAAAA,KAAK,CAACI,IAAN,GAAa,EAAb;AACH,GA9Ba;AA+BdkC,EAAAA,eA/Bc,2BA+BEtC,KA/BF,EA+BS;AACnBA,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GAjCa;AAkCdkC,EAAAA,YAlCc,wBAkCDvC,KAlCC,EAkCMI,IAlCN,EAkCY;AACtBJ,IAAAA,KAAK,CAACI,IAAN,GAAaA,IAAb;AACH;AApCa,CAAlB;AAuCA,eAAe;AACXJ,EAAAA,KAAK,EAALA,KADW;AAEXS,EAAAA,OAAO,EAAPA,OAFW;AAGXmB,EAAAA,SAAS,EAATA,SAHW;AAIXrB,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\r\nimport router from './router';\r\nconst url = \"api/post\";\r\nconst state = {\r\n    token: localStorage.getItem('token') || '',\r\n    user: {},\r\n    status: '',\r\n    error: null\r\n};\r\n\r\nconst getters = {\r\n    isLoggedIn: function (state) {\r\n        if (state.token != '') {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    // isLoggedIn: state => !!state.token,\r\n    // authState: state => state.status,\r\n    // user: state => state.user,\r\n    // error: state => state.error\r\n};\r\n\r\nconst actions = {\r\n    // Login Action\r\n    async login({\r\n        commit\r\n    }, user) {\r\n        commit('auth_request');\r\n        try {\r\n            let res = await axios.post(`${url}/login`, user)\r\n            if (res.data.success) {\r\n                const token = res.data.token;\r\n                const user = res.data.user;\r\n                // Store the token into the localstorage\r\n                localStorage.setItem('token', token);\r\n                // Set the axios defaults\r\n                axios.defaults.headers.common['Authorization'] = token;\r\n                commit('auth_success', token, user);\r\n            }\r\n            return res;\r\n        } catch (err) {\r\n            commit('auth_error', err);\r\n        }\r\n    },\r\n    // Register User\r\n    async register({\r\n        commit\r\n    }, userData) {\r\n        try {\r\n            commit('register_request');\r\n            let res = await axios.post(`${url}/register`, userData);\r\n            if (res.data.success !== undefined) {\r\n                commit('register_success');\r\n            }\r\n            return res;\r\n        } catch (err) {\r\n            commit('register_error', err)\r\n        }\r\n    },\r\n    // Get the user Profile\r\n    async getProfile({\r\n        commit\r\n    }) {\r\n        commit('profile_request');\r\n        let res = await axios.get(`${url}/profile`)\r\n        commit('user_profile', res.data.user)\r\n        return res;\r\n    },\r\n    // Logout the user\r\n    async logout({\r\n        commit\r\n    }) {\r\n        await localStorage.removeItem('token');\r\n        commit('logout');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        router.push('/login');\r\n        return\r\n    }\r\n};\r\n\r\nconst mutations = {\r\n    auth_request(state) {\r\n        state.error = null\r\n        state.status = 'loading'\r\n    },\r\n    auth_success(state, token, user) {\r\n        state.token = token\r\n        state.user = user\r\n        state.status = 'success'\r\n        state.error = null\r\n    },\r\n    auth_error(state, err) {\r\n        state.error = err.response.data.msg\r\n    },\r\n    register_request(state) {\r\n        state.error = null\r\n        state.status = 'loading'\r\n    },\r\n    register_success(state) {\r\n        state.error = null\r\n        state.status = 'success'\r\n    },\r\n    register_error(state, err) {\r\n        state.error = err.response.data.msg\r\n    },\r\n    logout(state) {\r\n        state.error = null\r\n        state.status = ''\r\n        state.token = ''\r\n        state.user = ''\r\n    },\r\n    profile_request(state) {\r\n        state.status = 'loading'\r\n    },\r\n    user_profile(state, user) {\r\n        state.user = user\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    actions,\r\n    mutations,\r\n    getters\r\n};"]},"metadata":{},"sourceType":"module"}